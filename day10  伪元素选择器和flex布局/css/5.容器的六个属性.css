.box {
    width: 120px;
    height: 120px;
    /* 圆角属性 */
    border-radius: 10px;
    background-color: bisque;

    float: left;
    margin-left: 30px;
}

.box>.child {
    width: 30px;
    height: 30px;
    color: white;
    background-color: black;
    /* 圆形 */
    border-radius: 50%;
}

/* 1. 容器的6个属性 (给容器加的6个属性) */

.box1 {
    /* 转弹性布局 (子元素默认沿主轴方向排列) */
    display: flex;

    /* (1) 定义主轴方向 */

    /* 默认值: 主轴从左往右排列 */
    flex-direction: row;
    /* 主轴从右往左排列 */
    flex-direction: row-reverse;
    /* 主轴从上往下 */
    flex-direction: column;
    /* 主轴从下往上 */
    flex-direction: column-reverse;
}


.box2 {
    display: flex;


    /* (2) 定义如何换行 */

    /* 默认值: 不换行*/
    flex-wrap: nowrap;
    /* 换行 起点在上方 (起点在交叉轴start位置) */
    flex-wrap: wrap;
    /* 换行 起点在下方 (起点在交叉轴end位置) */
    flex-wrap: wrap-reverse;
}

.box3 {
    display: flex;
    /* (3) 上面两个属性的简写属性 */

    /* flex-flow: 定义主轴方向 定义如何换行; */
    flex-flow: row nowrap;
    flex-flow: column wrap-reverse;
}

.box4 {
    display: flex;

    /* (4) 定义主轴的排列方式 */

    /* 默认值 左对齐 */
    justify-content: flex-start;
    /* 居中对齐 */
    justify-content: center;
    /* 右对齐 */
    justify-content: flex-end;

    /* 主轴两端对齐 */
    justify-content: space-between;
    /* 项目之间 间距平分 */
    justify-content: space-evenly;
    /* 项目左右两侧 距离相等 */
    justify-content: space-around;

}

.box5>.child,
.box6>.child {
    height: auto;
}

.box5 {
    display: flex;

    /* (5) 定义交叉轴的排列方式 */

    /* 默认值，项目铺满整个交叉轴 */
    align-items: stretch;
    /* 项目以文字基线对齐 */
    align-items: baseline;

    align-items: flex-start;
    align-items: center;
    align-items: flex-end;
}


.box6 {
    display: flex;
    flex-wrap: wrap;

    /* (6) 定义多根轴线如何排列 （多根轴线：换行，有几行就有几根轴线） */

    /* 多根轴线 在交叉轴 上对齐 */
    align-content: flex-start;
    /* 多根轴线 在交叉轴 居中对齐 */
    align-content: center;
    /* 多根轴线 在交叉轴 底对齐 */
    align-content: flex-end;

    /* 多根轴线两端对齐 */
    align-content: space-between;
    /* 多根轴线间距相等 */
    align-content: space-evenly;
    /* 每根轴线上下距离相等 */
    align-content: space-around;

    /* 默认值： 多根轴线铺满交叉轴*/
    align-content: stretch;
}




/* 2. 项目的6个属性 (给项目加的6个属性) */
.box7 {
    display: flex;
}

.box7>.item3 {
    /* (1) 项目的排列顺序 （越小越靠前， 越大越靠后） */

    /* 0是默认值 */
    order: -1;
}

.box8 {
    width: 180px;
    display: flex;
}

.box8>.child {

    /* (2) 定义项目如何放大 */

    /* 默认值0：即使主轴有多余的空间，项目也不放大 */
    flex-grow: 0;
    /* 主轴有多余的空间， 项目会按1：1比例放大 */
    flex-grow: 1;
    /* 计算方式：多余空间的尺寸 / 放大的份数 = 每一份的尺寸 */
}



.box9 {
    display: flex;
}

.box9>.child {
    /* (3) 定义项目如何缩小 */
    /* 如果主轴空间不够, 定义项目如何缩小*/

    /* 默认值1, 按1：1比例缩小 */
    flex-shrink: 1;
    /* 0表示不缩小 */
    /* flex-shrink: 0; */

    /* 计算方式: 溢出的尺寸 / 缩小的份数 = 每一份缩小的尺寸 */
}

/* 60 / 8 = 7.5 */
.box9>.item5 {
    flex-shrink: 3;
}



.box10 {
    display: flex;
    align-items: flex-start;
}

.box10>.child {
    flex-grow: 0;
    flex-shrink: 0;

    /* (4) 定义项目未缩放时占据的主轴空间大小  */
    /* 默认值: 由宽度决定 */
    flex-basis: auto;
    /* 优先级大于宽度 */
    flex-basis: 25px;
    width: 30px;
}



.box10>.child {

    /* (5) 上面三个属性的简写属性 */
    /* 语法：flex: 放大 缩小 未缩放时占据的主轴空间; */

    /* 默认值: 不放大 按比例缩小 占据的主轴空间由宽度决定 */
    flex: 0 1 auto;
    /* 预设值none: 0 0 auto */
    flex: none;
    /* 预设值auto: 1 1 auto */
    flex: auto;
}

.box11 {
    display: flex;
    align-items: center;
}

.box11>.item2 {
    /* (6) 重写项目在交叉轴上的排列方式 */
    align-self: flex-end;
}